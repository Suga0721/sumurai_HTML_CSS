<?php
//***************************** 
// ユーザーからの入力を受け付ける
//***************************** 
function input_user(&$users_word){ //参照渡し→input_user 関数は呼び出し側が用意した配列に、入力された文字を格納してほしくて作った関数。
    　　　　　　　　　　　　　　　　 //呼び出し側が用意した配列はパラメータ(引数)として渡しますが、通常の渡し方だと「値のコピー」が渡される。
                                  //このコピーにいくら値をセットしても、それはコピーなので呼び出し元が用意した配列変数には値がセット
                                  //されないままになってしまう。そこで、値のコピーではなく「入れ物そのもの」を渡す参照渡しが必要になる。

    $line = fgets(STDIN);　　//fgets()関数で、標準入力された1行目の値(データ)を取得しています。STADIN→自動的に標準入力の値が入ります。
    $line = trim($line);　　// →fgets()は改行も含めて取得するので、trim()で取り除いています。前後の空白文字を取り除いている
    var_dump($line);
    $users_word = $line;
}

//***************************** 
// その入力された内容を保存する
//***************************** 
function save_input($users_word){

    //ファイル開く
    $file_num = fopen ("sample1.txt",'w');　// $変数名(ファイルポインタ) = fopen (“開きたいファイル名”, “オープンモード”);
                                            // ファイルポインタ→どこからファイルに読み込みや書き込みをするかの始まりの位置
                                            // オープンモード→fopen関数でファイルを開く際に、どういう様式(モード)でファイルを開くかを指定
　　//ファイルに書きこむ
    fwrite($file_num ,$users_word);　// $file_num = fopen ("sample1.txt",'w')ではfopen関数が返したファイルポインタをfwrite関数に渡し、
    　　　　　　　　　　　　　　　　　　//変数"$users_word"　を書き込んでいます。(今回は$users_word=入力された内容)

    //ファイルを閉じる
    fclose($file_num);

}


$users_word =""; //プログラム内で変数に何も値が入力されていない状態→ ""　今回は一度しか文字を入力されないので "" 。複数の場合は　arrry(); を使用。

// ユーザーからの入力を受け付ける
input_user($users_word);　  //値渡しと参照渡しで文字列の数が違う理由→var_dump()が２回呼ばれていて、一つ目は9行目つまりinput_user関数内部。
　　　　　　　　　　　　　　　//もう一つは34行目でメインルーチン側。関数内部のvar_dumpでは入力された値が表示されているが、
var_dump($users_word);　　　//値渡しの場合は、呼び出し側が用意した配列に値が入らないので、34行目のvar_dumpでは空になる。
                           // 参照渡しでは呼び出し側が用意した配列に値が入るので、関数内部つまり9行のvar_dumpも、
                           //呼び出し側つまり34行目のvar_dumpもどちらも値が表示される。


// その入力された内容を保存する
save_input($users_word);